{"version":3,"file":"static/webpack/static/development/pages/index.js.e50746b3802507c02ea2.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport _ from 'lodash';\nimport 'date-fns';\n\nimport { useTranslation } from '../imports/i18n';\n\nimport { useUrlState } from '../imports/packages/use-url-state';\nimport { wrapPage } from '../imports/wrap-page';\nimport { CalcProvider, CalcContext } from '../imports/project/calc';\n\nimport { TextField, makeStyles, Grid, LinearProgress, Slider, InputAdornment, FormHelperText, Typography } from '@material-ui/core';\nimport {\n  FormatPaint,\n  HowToVote,\n  ShowChart,\n  Speed,\n  AccessTime,\n} from '@material-ui/icons';\nimport MomentUtils from '@date-io/moment';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst Body = ({ children }) => {\n  return <Grid container justify=\"center\" alignItems=\"center\">\n    <Grid item xs={12}>\n      {children}\n    </Grid>\n  </Grid>;\n};\n\nconst ItemRangeInput = ({\n  context = CalcContext,\n  label,\n  padding = 16,\n  background = '#76a5af',\n  end = <></>,\n  min = 1,\n  max = 100,\n  helperText = null,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { state, values, setState } = useContext(context);\n\n  return <Grid item {...props} style={{ padding, background }}>\n    <div style={{ position: 'relative' }}>\n      <TextField\n        label={t(label)}\n        type=\"number\"\n        value={+values[label]}\n        onChange={(e) => {\n          const v = +e.target.value;\n          setState({ ...state, [label]: +v });\n        }}\n        variant=\"standard\"\n        fullWidth\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">{end}</InputAdornment>,\n        }}\n        helperText={helperText}\n      />\n      <Slider\n        value={+values[label]}\n        onChange={(e, v) => {\n          setState({ ...state, [label]: +v });\n        }}\n        step={1}\n        min={min}\n        max={max}\n        style={{\n          position: 'absolute',\n          width: '100%',\n          left: 0,\n          top: 38,\n        }}\n      />\n    </div>\n  </Grid>\n};\n\nconst ItemDateInput = ({\n  context = CalcContext,\n  label,\n  padding = 16,\n  background = '#76a5af',\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { state, values, setState } = useContext(context);\n\n  return <Grid item {...props} style={{ padding, position: 'relative', background }}>\n    <KeyboardDatePicker\n      variant=\"inline\"\n      format=\"MM/DD/YYYY\"\n      margin=\"normal\"\n      label={t(label)}\n      fullWidth\n      value={new Date(values[label])}\n      onChange={(date) => {\n        setState({ ...state, [label]: date.valueOf() });\n      }}\n    />\n  </Grid>\n};\n\nconst ItemTextInput = ({\n  context = CalcContext,\n  title,\n  description,\n  padding = 16,\n  background = '#76a5af',\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { state, values, setState } = useContext(context);\n\n  return <Grid item {...props} style={{ padding, position: 'relative', background }}>\n    <Typography variant=\"caption\" style={{ opacity: 0.5 }}>\n      {title}\n    </Typography>\n    <Typography variant=\"body2\">\n      {description}\n    </Typography>\n  </Grid>\n};\n\nconst ItemChildren = ({\n  context = CalcContext,\n  padding = 16,\n  background = '#76a5af',\n  children,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { state, values, setState } = useContext(context);\n\n  return <Grid item {...props} style={{ padding, position: 'relative', background }}>\n    <div style={{ position: 'relative' }}>\n      {children}\n    </div>\n  </Grid>\n};\n\nconst Divider = () => {\n  return <Grid item xs={12} style={{\n    height: 4,\n    background: 'black',\n  }}/>;\n};\n\nconst Progress = ({\n  background = '#000',\n  width = '100%',\n  label = '',\n  labelDir = 'top',\n}) => {\n  return <div style={{\n    display: 'inline-block',\n    height: 20,\n    background,\n    width,\n    position: 'relative',\n  }}>\n  </div>;\n};\n\nconst Form = ({\n  context = CalcContext,\n}) => {\n  const { t } = useTranslation();\n  const { state, values: v, setState } = useContext(context);\n  \n  return (\n    <>\n      <Body>\n        <Grid container>\n          <ItemTextInput\n            xs={12}\n            background={'#fff'}\n            title={<></>}\n            description={t('calculatorForPartner')}\n          />\n          <Divider/>\n          <ItemRangeInput\n            label=\"ownerMonths\"\n            xs={6} md={3}\n            background={'#76a5af'}\n            end={<>{t('m.')}</>}\n            min={6}\n            max={36}\n          />\n          <ItemDateInput\n            label=\"startDate\"\n            xs={6} md={3}\n            background={'#8ea3c4'}\n          />\n          <ItemRangeInput\n            label=\"plainMonthPrice\"\n            xs={6} md={3}\n            background={'#ffe599'}\n            end={<>{t('r.')}/{t('m.')}</>}\n            min={1}\n            max={100000}\n            helperText={<>\n              {t('plainPeriodPrice')} {+v.plainPeriodPrice}{t('r.')}\n            </>}\n          />\n          <ItemRangeInput\n            label=\"liquidMonthPrice\"\n            xs={6} md={3}\n            background={'#deaaaa'}\n            end={<>{t('r.')}/{t('m.')}</>}\n            min={1}\n            max={100000}\n          />\n          <ItemRangeInput\n            label=\"firstRepair\"\n            xs={12} md={4}\n            background={'#c9daf8'}\n            end={<>{t('r.')}</>}\n            min={1}\n            max={700000}\n            helperText={t('fromMeasurer')}\n          />\n          <ItemRangeInput\n            label=\"beforeRepare\"\n            xs={6} md={4}\n            background={'#c9daf8'}\n            end={<>{t('r.')}</>}\n            min={1}\n            max={400000}\n            helperText={t('fromMeasurer')}\n          />\n          <ItemRangeInput\n            label=\"afterRepare\"\n            xs={6} md={4}\n            background={'#c9daf8'}\n            end={<>{t('r.')}</>}\n            min={1}\n            max={400000}\n            helperText={t('fromMeasurer')}\n          />\n          <ItemTextInput\n            xs={6} md={3}\n            background={'#6fa8dc'}\n            title={t('repairPeriodPrice')}\n            description={<>{+v.repairPeriodPrice} {t('r.')}</>}\n          />\n          <ItemTextInput\n            xs={6} md={3}\n            background={'#a4c2f4'}\n            title={t('repairMonthPrice')}\n            description={<>{+v.repairMonthPrice} {t('r.')}/{t('m.')}</>}\n          />\n          <ItemTextInput\n            xs={6} md={3}\n            background={'#93c47d'}\n            title={t('basePeriodSum')}\n            description={<>{+v.basePeriodSum} {t('r.')}</>}\n          />\n          <ItemTextInput\n            xs={6} md={3}\n            background={'#b6d7a8'}\n            title={t('baseMonthSum')}\n            description={<>{+v.baseMonthSum} {t('r.')}/{t('m.')}</>}\n          />\n          <ItemRangeInput\n            label=\"minMonthCash\"\n            xs={6} md={4}\n            background={'#9fff73'}\n            end={<>{t('r.')}/{t('m.')}</>}\n            min={1}\n            max={400000}\n            helperText={<>\n              {t('minMonthCashPercent')} {+v.minMonthCashPercent}{t('%')}\n            </>}\n          />\n          <ItemRangeInput\n            label=\"minPercent\"\n            xs={6} md={4}\n            background={'#9fff73'}\n            end={<>{t('%')}</>}\n            min={1}\n            max={100}\n            helperText={<>\n              {t('minPercentCash')} {+v.minPercentCash}{t('r.')}\n            </>}\n          />\n          <ItemTextInput\n            xs={12} md={4}\n            background={'#50ff00'}\n            title={t('percent')}\n            description={<>{+v.percent} {t('%')}</>}\n          />\n          <Divider/>\n          <ItemTextInput\n            xs={6}\n            background={'#67da8b'}\n            title={t('cashPeriod')}\n            description={<>{+v.cashPeriod} {t('r.')}</>}\n          />\n          <ItemTextInput\n            xs={6}\n            background={'#89eda8'}\n            title={t('cashMonth')}\n            description={<>{+v.cashMonth} {t('r.')}/{t('m.')}</>}\n          />\n          <Divider/>\n          <ItemTextInput\n            xs={4}\n            background={'#e06666'}\n            title={t('sumPeriod')}\n            description={<>{+v.sumPeriod} {t('r.')}</>}\n          />\n          <ItemTextInput\n            xs={4}\n            background={'#ea9999'}\n            title={t('sumMonth')}\n            description={<>{+v.sumMonth} {t('r.')}/{t('m.')}</>}\n          />\n          <ItemRangeInput\n            label=\"bankPercent\"\n            xs={4}\n            background={'#ff93ff'}\n            end={<>{t('%')}</>}\n            min={1}\n            max={100}\n            helperText={<>\n              <div>{t('sumPeriodBank')} {+v.sumPeriodBank}{t('r.')}/{t('m.')}</div>\n              <div>{t('sumMonthBank')} {+v.sumMonthBank}{t('r.')}/{t('m.')}</div>\n            </>}\n          />\n          <ItemRangeInput\n            label=\"tax\"\n            xs={6}\n            background={'#935b22'}\n            end={<>{t('%')}</>}\n            min={1}\n            max={100}\n            helperText={<>\n              <div>{t('taxPeriod')} {+v.taxPeriod}{t('r.')}</div>\n              <div>{t('taxMonth')} {+v.taxMonth}{t('r.')}/{t('m.')}</div>\n            </>}\n          />\n          <ItemRangeInput\n            label=\"rollback\"\n            xs={6}\n            background={'#ba5353'}\n            end={<>{t('%')}</>}\n            min={1}\n            max={100}\n            helperText={<>\n              <div>{t('rollbackPeriod')} {+v.rollbackPeriod}{t('r.')}</div>\n              <div>{t('rollbackMonth')} {+v.rollbackMonth}{t('r.')}/{t('m.')}</div>\n            </>}\n          />\n          <Divider/>\n          <ItemTextInput\n            xs={6}\n            background={'#a97d7d'}\n            title={t('minusPeriod')}\n            description={<>{+v.minusPeriod} {t('r.')}</>}\n          />\n          <ItemTextInput\n            xs={6}\n            background={'#c39a9a'}\n            title={t('minusMonth')}\n            description={<>{+v.minusMonth} {t('r.')}/{t('m.')}</>}\n          />\n          <Divider/>\n          <ItemTextInput\n            xs={6}\n            background={'#c3ac57'}\n            title={t('liveCashPeriod')}\n            description={<>{+v.liveCashPeriod} {t('r.')}</>}\n          />\n          <ItemTextInput\n            xs={6}\n            background={'#dfc76a'}\n            title={t('liveCashMonth')}\n            description={<>{+v.liveCashMonth} {t('r.')}/{t('m.')}</>}\n          />\n          <Divider/>\n          <ItemRangeInput\n            label=\"agentFixPeriod\"\n            xs={4}\n            background={'#b1b200'}\n            end={<>{t('r.')}</>}\n            min={1}\n            max={100000}\n          />\n          <ItemRangeInput\n            label=\"partnersFixPeriod\"\n            xs={4}\n            background={'#ffff00'}\n            end={<>{t('r.')}</>}\n            min={1}\n            max={300000}\n          />\n          <ItemTextInput\n            xs={4}\n            background={'#ff9f00'}\n            title={t('fundedLiveCashPeriod')}\n            description={<>{+v.fundedLiveCashPeriod} {t('r.')}</>}\n          />\n          <ItemTextInput\n            xs={12}\n            background={'#fff'}\n            title={<></>}\n            description={t('partsCash')}\n          />\n          <ItemChildren\n            xs={12}\n            background={'#fff'}\n          >\n            <Progress background={'#b1b200'} width={`${(+v.agentFixPeriod) / ((+v.liveCashPeriod) / 100)}%`}/>\n            <Progress background={'#ffff00'} width={`${(+v.partnersFixPeriod) / ((+v.liveCashPeriod) / 100)}%`}/>\n            <Progress background={'#ff9f00'} width={`${(+v.fundedLiveCashPeriod) / ((+v.liveCashPeriod) / 100)}%`}/>\n          </ItemChildren>\n          <ItemTextInput\n            xs={12}\n            background={'#fff'}\n            title={<></>}\n            description={t('totalSum')}\n          />\n          <ItemChildren\n            xs={12}\n            background={'#fff'}\n          >\n            <Progress background={'#e06666'} width={'100%'}/>\n            <Progress background={'#6fa8dc'} width={`${(+v.repairPeriodPrice) / ((+v.sumPeriod) / 100)}%`}/>\n            <Progress background={'#ffd966'} width={`${(+v.plainPeriodPrice) / ((+v.sumPeriod) / 100)}%`}/>\n            \n            <Progress background={'#935b22'} width={`${(+v.taxPeriod) / ((+v.sumPeriod) / 100)}%`}/>\n            <Progress background={'#ba5353'} width={`${(+v.rollbackPeriod) / ((+v.sumPeriod) / 100)}%`}/>\n            \n            <Progress background={'#b1b200'} width={`${(+v.agentFixPeriod) / ((+v.sumPeriod) / 100)}%`}/>\n            <Progress background={'#ffff00'} width={`${(+v.partnersFixPeriod) / ((+v.sumPeriod) / 100)}%`}/>\n            <Progress background={'#ff9f00'} width={`${(+v.fundedLiveCashPeriod) / ((+v.sumPeriod) / 100)}%`}/>\n          </ItemChildren>\n          <Divider/>\n        </Grid>\n      </Body>\n    </>\n  );\n};\n\nexport default wrapPage(() => {\n  return (\n    <>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <CalcProvider>\n          <Form/>\n        </CalcProvider>\n      </MuiPickersUtilsProvider>\n    </>\n  );\n});\n"],"mappings":"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","sourceRoot":""}